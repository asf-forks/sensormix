<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:osgi="http://www.springframework.org/schema/osgi"
	xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:cxf="http://camel.apache.org/schema/cxf"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       http://cxf.apache.org/jaxws 
       http://cxf.apache.org/schemas/jaxws.xsd
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/osgi  
       http://www.springframework.org/schema/osgi/spring-osgi.xsd
       http://camel.apache.org/schema/spring 
       http://camel.apache.org/schema/spring/camel-spring.xsd
       http://camel.apache.org/schema/cxf
	   http://camel.apache.org/schema/cxf/camel-cxf.xsd
	   http://www.springframework.org/schema/util 
	   http://www.springframework.org/schema/util/spring-util-2.5.xsd
	   http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-2.5.xsd">

	<!-- Prail Routes -->
	<routeContext id="prailEntryRoutes" xmlns="http://camel.apache.org/schema/spring"
		xmlns:wsn="http://docs.oasis-open.org/wsn/b-2">

		<route id="cxfPrailEntryRoute">
			<from uri="cxf:bean:cxfPrailEntry" />
			<convertBodyTo type="java.lang.String" />
			<setHeader headerName="prailTopic">
				<xpath resultType="java.lang.String">/wsn:Notify/wsn:NotificationMessage/wsn:Topic/text()
				</xpath>
			</setHeader>
			<setHeader headerName="prailFriendlyTopic">
				<xpath resultType="java.lang.String">
				<![CDATA[translate(substring-after(/wsn:Notify/wsn:NotificationMessage/wsn:Topic,'/'),'/:;.,#@{}<>[]()*|?"','')]]>
				</xpath>
			</setHeader>
			<multicast parallelProcessing="true">
				<to uri="direct:prailMessageProcessing" />
				<to uri="direct:prailMsgDump" />
			</multicast>
		</route>

		<route id="prailMessageProcessingRoute">
			<from uri="direct:prailMessageProcessing" />
			<choice>
				<when>
					<xpath>//*[local-name()='alert']</xpath>
					<to uri="direct:prailCapMessageProcessing" />
				</when>
				<when>
					<xpath>//*[local-name()='resourceDefinitions']</xpath>
					<to uri="xslt://notifyResDefinitionToPublish.xsl" />
				</when>
				<when>
					<xpath>//*[local-name()='resourceRemovals']</xpath>
					<to uri="xslt://notifyResRemoveToPublish.xsl" />
				</when>
				<when>
					<xpath>//*[local-name()='resourceUpdates']</xpath>
					<to uri="xslt://notifyResUpdateToPublish.xsl" />
				</when>
				<otherwise>
					<to uri="log:messagesNotManaged?showAll=true" />
					<stop />
				</otherwise>
			</choice>
			<unmarshal>
				<jaxb contextPath="com.thalesgroup.it.aocc.camel.model" />
			</unmarshal>
			<to uri="direct:outputToAocc" />
		</route>

		<route id="prailCapMessageProcessingRoute" xmlns:wsn="http://docs.oasis-open.org/wsn/b-2"
			xmlns:alms="http://protectrail.eu/ns/service/alarm">
			<from uri="direct:prailCapMessageProcessing" />
			<choice>
				<when>
					<xpath>
						/wsn:Notify/wsn:NotificationMessage/wsn:Topic/text() =
						'urn:rixf:com.morpho.faceluggagerecon/unrecognizedFace'
					</xpath>
					<to uri="xslt://notifyFaceLuggageRecognitionAlertToPublish.xsl" />
				</when>
				<when>
					<xpath>
						/wsn:Notify/wsn:NotificationMessage/wsn:Topic/text() =
						'urn:rixf:com.morpho.facerecognition/unrecognizedFace'
					</xpath>
					<to uri="xslt://notifyFaceRecognitionAlertToPublish.xsl" />
				</when>
				<when>
					<xpath>
						/wsn:Notify/wsn:NotificationMessage/wsn:Topic/text() =
						'urn:rixf:com.morpho.faceluggagerecon/leftLuggage'
					</xpath>
					<to uri="xslt://notifyLeftLuggageAlertToPublish.xsl" />
				</when>
				<when>
					<xpath>
						/wsn:Notify/wsn:NotificationMessage/wsn:Topic/text() =
						'urn:rixf:de.sarad.cbrne/events_type/RadioactiveAerosolDetected'
					</xpath>
					<to uri="xslt://notifyRadioactiveAerosolAlertToPublish.xsl" />
				</when>
				<when>
					<xpath>
						/wsn:Notify/wsn:NotificationMessage/wsn:Topic/text() =
						'urn:rixf:uk.uni.kingston.intrusiondetection/events_type/IntruderDetected'
					</xpath>
					<to uri="xslt://notifyIntruderDetectedAlertToPublish.xsl" />
				</when>
				<when>
					<xpath>
						/wsn:Notify/wsn:NotificationMessage/wsn:Topic/text() =
						'urn:rixf:com.smiths.hcv/events_type/SuspectWagonDetected'
					</xpath>
					<to uri="xslt://notifySuspectWagonDetectedAlertToPublish.xsl" />
				</when>
				<when>
					<xpath>
						/wsn:Notify/wsn:NotificationMessage/wsn:Topic/text() =
						'urn:rixf:com.ansaldosts.lineprotection/events_type/PeoplePresence'
					</xpath>
					<to uri="xslt://notifyPeoplePresenceAlertToPublish.xsl" />
				</when>
				<when>
					<xpath>
						/wsn:Notify/wsn:NotificationMessage/wsn:Topic/text() =
						'urn:rixf:com.ansaldosts.lineprotection/events_type/VideoLoss'
					</xpath>
					<to uri="xslt://notifyVideoLossAlertToPublish.xsl" />
				</when>
				<otherwise>
					<to uri="xslt://notifyAlertToPublish.xsl" />
				</otherwise>
			</choice>
			<setHeader headerName="aoccAlarmDefinitionId">
				<xpath resultType="java.lang.String">//alms:alarmDefinitions/alms:alarm/@id</xpath>
			</setHeader>
		</route>

		<route id="outputToAoccRoute">
			<from uri="direct:outputToAocc" />
			<setHeader headerName="aoccOperation">
				<constant>publish</constant>
			</setHeader>
			<setHeader headerName="aoccConsumerId">
				<constant>urn:rixf:com.thalesgroup.it.prail/prailNotificationsAdapter
				</constant>
			</setHeader>
			<!-- <to uri="log:service_to_aoccEsb" /> -->
			<multicast parallelProcessing="true">
				<to uri="aocc:service:aoccEsb" />
				<to uri="direct:forwardToSoccLogicIntegration" />
			</multicast>
		</route>
	</routeContext>

	<routeContext id="prailSubscriptionRoutes" xmlns="http://camel.apache.org/schema/spring">

		<!-- Subscribe every 10 minutes to the Broker -->
		<route id="cxfPrailSubscriptionRoute">
			<from uri="timer://prail_subscription?period=600000&amp;delay=1000" />
			<setHeader headerName="prailConsumerAddress">
				<constant>http://172.17.0.81:9181/cxf/thalesPrailEventsEntry
				</constant>
			</setHeader>
			<setHeader headerName="prailTopic">
				<constant><![CDATA[urn:rixf:com.bombardier.levelcrossing/events_type/ObstacleDetected|urn:rixf:com.selex_es.usd/events_type/analyticIntrusionDetection|urn:rixf:com.selex_es.usd/events_type/peridectIntrusionDetection|urn:rixf:com.selex_es.usd/events_type/biometricAccessNotAuthenticated|urn:rixf:uk.uni.kingston.intrusiondetection/events_type/IntruderDetected|urn:rixf:com.elbit_systems.brightviewdaycam/events_type/MotionDetected|urn:rixf:com.elbit/type/BrightView/IntrusionDetection|urn:rixf:com.ansaldosts.rackprotection/events_type/UnauthorizedAccess|urn:rixf:com.ansaldosts.rackprotection/events_type/RackTampering|urn:rixf:com.ansaldosts.rackprotection/events_type/RackDisconnected|urn:rixf:com.ansaldosts.ictprotection/events_type/UnauthorizedDevice|urn:rixf:com.ansaldosts.ictprotection/events_type/CyberAttack|urn:rixf:com.ansaldosts.ictprotection/events_type/VirusInfection|urn:rixf:com.morpho.faceluggagerecon/leftLuggage|urn:rixf:com.morpho.faceluggagerecon/stolenLuggage|urn:rixf:com.morpho.faceluggagerecon/unrecognizedFace|urn:rixf:com.morpho.facerecognition/unrecognizedFace|urn:rixf:com.morpho.accescontrol/unauthorizedAcces|urn:rixf:de.sarad.cbrne/events_type/RadioactiveAerosolDetected|urn:rixf:de.sarad.cbrne/events_type/CombustibleOrToxicGasDetected|urn:rixf:de.sarad.cbrne/events_type/RadioactiveSourceDetected|urn:rixf:com.smiths.hcv/events_type/SuspectWagonDetected|urn:rixf:com.smiths.hcv/events_type/RadioactiveSourceDetected|urn:rixf:com.alstom.transport.trainClearance/topics/SmokeDetected|urn:rixf:com.alstom.transport.trainClearance/topics/TrainOutOfGauge|urn:rixf:com.alstom.transport.socc/topics/PossibleArsonDetected|urn:rixf:com.alstom.transport.trainClearance/topics/DoorOpened|urn:rixf:com.alstom.transport.trainClearance/topics/GantryIntrusion|urn:rixf:com.alstom.transport.trainClearance/topics/MotionDetected|urn:rixf:nl.tno.personTracking/events_types/personTracking|urn:rixf:com.bombardier.train/events_type/position|urn:rixf:com.sodern/topic/threat/cbrne|urn:rixf:com.ansaldosts.lineprotection/events_type/PeoplePresence|urn:rixf:com.ansaldosts.lineprotection/events_type/VideoLoss]]></constant>
			</setHeader>
			<to uri="velocity://vm/subscription.vm" />
			<to uri="log:prail_subscription" />
			<to uri="cxf:bean:cxfEventBrokerSubscription" />
			<convertBodyTo type="java.lang.String" />
			<to uri="log:prail_subscription_result" />
		</route>
	</routeContext>

	<routeContext id="prailOutRoutes" xmlns="http://camel.apache.org/schema/spring">
		<!-- Receiver of AOCC Events / step 2 -->
		<route id="cxfPrailOutRoute">
			<from uri="direct:prailCapAdapter" />
			<setBody>
				<simple>${body?.args?.[0]}</simple>
			</setBody>
			<to uri="velocity://vm/prail_cap_template.vm" />
			<to uri="cxf:bean:cxfEventBrokerNotification" />
		</route>
	</routeContext>

	<!-- SOCC routes -->
	<routeContext id="soccEntryRoutes" xmlns="http://camel.apache.org/schema/spring">
		<!-- Receiver of AOCC Events / step 1 -->
		<!-- TODO: Rename route id ending in ...route -->
		<route id="soccToEventBrokerIntegration">
			<!-- <from -->
			<!-- uri="aocc:service:aoccEsb?cometConsumer=true&amp;cometConsumerId=urn:rixf:com.thalesgroup.it.prail/consumer/prail_eventbroker_integration" 
				/> -->
			<from uri="vm:queueToEbint" />
			<to
				uri="aocc:service:soccLogicIntegration?startMethodName=startService&amp;stopMethodName=stopService" />
		</route>
	</routeContext>
	<routeContext id="soccOutRoutes" xmlns="http://camel.apache.org/schema/spring">
		<!-- Proxy to invoke AOCC Services -->
		<!-- TODO: Rename route id ending in ...route -->
		<route id="eventBrokerIntegrationToSocc">
			<from
				uri="aocc:service:soccLogicIntegration?startMethodName=startService&amp;stopMethodName=stopService" />
			<to uri="aocc:service:aoccEsb" />
		</route>
	</routeContext>

	<routeContext id="forwardToSoccLogicIntegrationRoutes"
		xmlns="http://camel.apache.org/schema/spring">
		<route id="forwardToSoccLogicIntegrationRoute">
			<from uri="direct:forwardToSoccLogicIntegration" />
			<filter>
				<simple>${headers.aoccAlarmDefinitionId} != null</simple>
				<setBody>
					<simple>${headers.aoccAlarmDefinitionId}</simple>
				</setBody>
				<to uri="bean:soccLogicIntegration?method=alarmDefinitionTrigger" />
			</filter>
		</route>
	</routeContext>

</beans>
